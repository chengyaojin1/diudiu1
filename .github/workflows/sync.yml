name: 同步 Fork 仓库

on:
  schedule:
    - cron: '0 0 * * *' # 每天 0 点运行一次
  workflow_dispatch: # 手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 0. 准备工作: 获取仓库信息，确定目标分支
      - name: 准备工作
        id: setup
        run: |
          echo "当前工作目录: $(pwd)"
          echo "目标分支: ${{ github.ref_name }}"
          echo "上游仓库: https://github.com/cmliu/edgetunnel.git"
          echo "::set-output name=target_branch::${{ github.ref_name }}"

      # 1. 检出当前仓库代码 (浅拷贝)
      - name: 检出当前仓库代码 (浅拷贝)
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ steps.setup.outputs.target_branch }}
          fetch-depth: 1

      # 2. 添加上游仓库并检查更新
      - name: 添加上游仓库并检查更新
        id: check_upstream_changes
        run: |
          git remote add upstream https://github.com/cmliu/edgetunnel.git
          git fetch upstream

          CURRENT_COMMIT=$(git rev-parse HEAD)
          UPSTREAM_COMMIT=$(git rev-parse upstream/main)

          echo "当前仓库最新提交: $CURRENT_COMMIT"
          echo "上游仓库最新提交: $UPSTREAM_COMMIT"

          if [ "$CURRENT_COMMIT" == "$UPSTREAM_COMMIT" ]; then
            echo "上游仓库没有新的提交，跳过同步"
            echo "::set-output name=has_changes::false"
            exit 0
          else
            echo "上游仓库有新的提交，继续同步"
            echo "::set-output name=has_changes::true"
          fi

      # 3. 备份自定义同步文件
      - name: 备份自定义同步文件
        id: backup_sync
        if: steps.check_upstream_changes.outputs.has_changes == 'true'
        run: |
          git checkout -B backup
          echo "已切换到 backup 分支"
         
          if [ -f .github/workflows/sync.yml ]; then
             if git diff --quiet .github/workflows/sync.yml backup_sync.yml; then
                 echo "sync.yml 文件未更改，跳过备份"
                 echo "::set-output name=backed_up::false"
                 exit 0;
              fi
              
            cp .github/workflows/sync.yml backup_sync.yml
