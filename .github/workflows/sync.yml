name: Sync Fork

on:
  schedule:
    - cron: '0 0 * * *' # 每天 0 点运行一次
  workflow_dispatch: # 手动触发

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 检出你的仓库代码
      - name: Checkout your repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false # 禁用默认凭据
          fetch-depth: 0 # 拉取所有分支历史记录

      # 添加上游仓库
      - name: Add upstream repository
        run: |
          git remote add upstream https://github.com/cmliu/edgetunnel.git
          git fetch upstream

      # 备份自定义同步文件到 backup 分支
      - name: Backup custom sync file
        run: |
          git checkout -b backup || git checkout backup
          cp .github/workflows/sync.yml backup_sync.yml
          git add backup_sync.yml
          git commit -m "Backup custom sync.yml file" || echo "No changes to commit"
          git push origin backup

      # 合并上游分支到你的主分支，但排除自定义文件
      - name: Merge upstream changes while excluding specific files
        run: |
          git checkout main
          git merge upstream/main --allow-unrelated-histories
          git checkout HEAD -- . ':!.github/workflows/sync.yml' # 恢复自己的 sync.yml 文件
          git add .github/workflows/sync.yml
          git commit -m "Preserve custom sync.yml file" || echo "No changes to commit"
          git push origin main

      # 恢复同步文件（如果被覆盖）
      - name: Restore custom sync file if overwritten
        run: |
          if [ ! -f .github/workflows/sync.yml ]; then
            git checkout backup -- backup_sync.yml
            mv backup_sync.yml .github/workflows/sync.yml
            git add .github/workflows/sync.yml
            git commit -m "Restore custom sync.yml file from backup"
            git push origin main
          fi
